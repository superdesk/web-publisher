parameters:
    swp_core.routing.route_enhancer.class: SWP\Bundle\CoreBundle\Enhancer\RouteEnhancer
    swp_core.theme.resolver.template_name.class: SWP\Bundle\CoreBundle\Resolver\TemplateNameResolver

services:
    swp_core.detection.device_detection:
        class: SWP\Bundle\CoreBundle\Detection\DeviceDetection

    sylius.theme.locator.application_resource:
        class: SWP\Bundle\CoreBundle\Locator\ApplicationResourceLocator
        arguments:
            - "@filesystem"
            - "@swp_core.detection.device_detection"

    sylius.theme.locator.bundle_resource:
        class: SWP\Bundle\CoreBundle\Locator\BundleResourceLocator
        arguments:
            - "@filesystem"
            - "@kernel"
            - "@swp_core.detection.device_detection"

    swp_core.theme.context.tenant_aware:
        class: SWP\Bundle\CoreBundle\Theme\TenantAwareThemeContext
        public: false
        arguments:
            - "@swp_multi_tenancy.tenant_context"
            - "@sylius.repository.theme"
            - "@doctrine_cache.providers.main_cache"

    swp_core.no_theme_exception_listener:
        class: SWP\Bundle\CoreBundle\EventListener\NoThemeExceptionListener
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    swp_core.resources_list_response_listener:
        class: SWP\Component\Common\EventListener\ResourceResponseListener
        arguments:
            - "@fos_rest.view_handler"
        tags:
            - { name: kernel.event_listener, event: kernel.view }

    swp_core.theme.resolver.template_name:
        class: '%swp_core.theme.resolver.template_name.class%'

    swp_core.routing.route_enhancer:
        class: '%swp_core.routing.route_enhancer.class%'
        arguments:
            - "@swp_core.theme.resolver.template_name"
            - "@swp_template_engine_loader_chain"
            - "@swp_template_engine_context"
        tags:
            -  { name: dynamic_router_route_enhancer, priority: 10 }

    swp_core.provider.theme:
        class: SWP\Bundle\CoreBundle\Theme\Provider\ThemeProvider
        arguments:
            - '@sylius.repository.theme'
            - '@swp_multi_tenancy.tenant_context'

    swp_core.security.session.domain_dynamic_storage:
        class: SWP\Bundle\CoreBundle\Security\Storage\DynamicDomainSessionStorage
        arguments:
            - "%domain%"

    swp_core.listener.article_rules_subscriber:
        class: SWP\Bundle\CoreBundle\EventSubscriber\ProcessArticleRulesSubscriber
        arguments:
            - '@swp_core.processor.tenant_aware_rule'
        tags:
            - { name: kernel.event_subscriber }

    swp_core.listener.article_content_list:
        class: SWP\Bundle\CoreBundle\EventListener\AddArticleToListListener
        arguments:
            - '@swp.repository.content_list'
            - '@swp.factory.content_list_item'
            - '@swp.matcher.article_criteria'
            - '@event_dispatcher'
        tags:
            - { name: kernel.event_listener, event: swp.article.published, method: addArticleToList }
            - { name: kernel.event_listener, event: swp.article.published, method: addArticleToBucket }

    swp_core.listener.revision_subscriber:
        class: SWP\Bundle\CoreBundle\EventSubscriber\RevisionsSubscriber
        arguments:
            - "@swp.repository.container"
            - "@swp.factory.revision_log"
        tags:
            - { name: kernel.event_subscriber }

    swp_core.subscriber.http_cache:
        class: SWP\Bundle\CoreBundle\EventSubscriber\HttpCacheSubscriber
        arguments:
            - "@fos_http_cache.cache_manager"
            - "@logger"
        tags:
            - { name: kernel.event_subscriber }

    swp.security.token_authenticator:
        class: SWP\Bundle\CoreBundle\Security\Authenticator\TokenAuthenticator
        arguments:
            - "@swp.repository.api_key"
            - "@swp_multi_tenancy.tenant_context"
            - "@swp.repository.tenant"
            - "@event_dispatcher"

    swp.security.preview_token_authenticator:
        class: SWP\Bundle\CoreBundle\Security\Authenticator\PreviewTokenAuthenticator
        parent: swp.security.token_authenticator

    swp.security.user_provider:
        class: SWP\Bundle\CoreBundle\Security\Provider\UserProvider
        arguments:
            - "@fos_user.user_manager"

    swp.checker.amp_support:
        class: SWP\Bundle\CoreBundle\Checker\AmpSupportChecker
        arguments:
            - "@swp_multi_tenancy.tenant_context"
            - "@request_stack"

    swp.loader.amp_theme:
        class: SWP\Bundle\CoreBundle\Theme\AmpThemeLoader
        public: false
        arguments:
            - "@twig.loader.filesystem"
            - "@swp_core.theme.context.tenant_aware"
            - "@sylius.theme.hierarchy_provider"
            - "%takeit_amp_html.configuration.theme.theme_path%"

    swp.facebook.service.instant_articles:
        class: SWP\Bundle\CoreBundle\Service\FacebookInstantArticlesService
        arguments:
            - "@swp_facebook.instant_articles_manager"
            - "@swp.factory.facebook_instant_articles_article"
            - "@swp.repository.facebook_instant_articles_article"
            - "@router"

    swp.facebook.listener.instant_articles:
        class: SWP\Bundle\CoreBundle\EventListener\FacebookInstantArticlesListener
        arguments:
            - "@swp_facebook.template_parser"
            - "@swp_template_engine_context.factory.meta_factory"
            - "@swp.repository.facebook_instant_articles_feed"
            - "@swp.repository.facebook_page"
            - "@swp.facebook.service.instant_articles"
            - "@swp.repository.facebook_instant_articles_article"
        tags:
            - { name: kernel.event_listener, event: swp.content_list.post_item_add, method: sendArticleToFacebook }
            - { name: kernel.event_listener, event: swp.article.post_create, method: resendUpdatedArticleToFacebook }
            - { name: kernel.event_listener, event: swp.article.unpublished, method: removeArticleFromFacebook }

    swp_core.listener.tenant_revision:
        class: SWP\Bundle\CoreBundle\EventListener\TenantRevisionListener
        arguments:
            - "@swp.repository.revision"
            - "@swp_revision.context.revision"
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    swp.matcher.article_criteria:
        class: SWP\Bundle\CoreBundle\Matcher\ArticleCriteriaMatcher

    swp.listener.remove_items:
        class: SWP\Bundle\CoreBundle\EventListener\RemoveItemsListener
        arguments:
            - '@swp.remover.content_list_items_remover'
            - '@swp.repository.article'
            - '@swp.factory.content_list_item'
        tags:
            - { name: kernel.event_listener, event: swp.list_criteria_change, method: onListCriteriaChange }

    swp.manager.revision:
        class: SWP\Bundle\RevisionBundle\Manager\RevisionManager
        arguments: ["@swp.factory.revision", "@swp_revision.context.revision", "@event_dispatcher", "@swp.object_manager.revision"]

    swp.listener.menu.widget_create:
        class: SWP\Bundle\CoreBundle\EventListener\MenuWidgetCreateListener
        arguments:
            - '@swp.factory.widget_model'
            - '@swp.repository.widget_model'
        tags:
            - { name: kernel.event_listener, event: swp.menu.created, method: onMenuCreated }

    swp.listener.menu.menu_update:
        class: SWP\Bundle\CoreBundle\EventListener\MenuUpdateListener
        arguments:
            - '@swp_menu.manager.menu_item'
            - '@swp.repository.menu'
        tags:
            - { name: kernel.event_listener, event: swp.route.post_update, method: onRouteUpdate }


    swp.listener.menu.widget_delete:
        class: SWP\Bundle\CoreBundle\EventListener\MenuWidgetDeleteListener
        arguments:
            - '@swp.repository.widget_model'
        tags:
            - { name: kernel.event_listener, event: swp.menu.deleted, method: onMenuDeleted }

    swp_core.decorating_manager.menu_item:
        class: SWP\Bundle\CoreBundle\Manager\MenuItemManager
        decorates: swp_menu.manager.menu_item
        arguments:
            - "@swp.repository.menu"
            - "@swp.object_manager.menu"
            - "@swp_menu.extension_chain"
        public: false

    swp_core.context.scope.subscriber:
        class: SWP\Bundle\CoreBundle\EventSubscriber\ScopeContextSubscriber
        arguments:
          - '@swp_settings.context.scope'
        tags:
            - { name: kernel.event_subscriber }

    swp_core.jms_tenant_handler:
        class: SWP\Bundle\CoreBundle\Serializer\TenantHandler
        arguments:
          - '@swp.repository.tenant'
          - '@router.default'
        tags:
            - { name: jms_serializer.subscribing_handler }

    swp_core.article.publisher:
        class: SWP\Bundle\CoreBundle\Service\ArticlePublisher
        arguments:
          - '@swp.repository.article'
          - '@event_dispatcher'
          - '@swp.factory.article'
          - '@swp_multi_tenancy.tenant_context'

    swp_core.listener.canceled_package:
        class: SWP\Bundle\CoreBundle\EventListener\CanceledPackageListener
        arguments:
            - '@event_dispatcher'
            - '@swp.repository.article'
            - '@swp.object_manager.article'
        tags:
            - { name: kernel.event_listener, event: swp.bridge.package_post_update, method: onCanceled, priority: 10 }

    swp_core.listener.updated_package:
        class: SWP\Bundle\CoreBundle\EventListener\UpdatedPackageListener
        arguments:
            - '@swp.hydrator.article'
            - '@swp.object_manager.article'
            - '@swp.repository.article'
            - '@event_dispatcher'
        tags:
            - { name: kernel.event_listener, event: swp.bridge.package_post_update, method: onUpdated, priority: 20 }

    swp_core.listener.package_status:
        class: SWP\Bundle\CoreBundle\EventListener\PackageStatusListener
        tags:
            - { name: kernel.event_listener, event: swp.article.canceled, method: onArticleCancel }
            - { name: kernel.event_listener, event: swp.article.unpublished, method: onArticleUnpublish }
            - { name: kernel.event_listener, event: swp.article.published, method: onArticlePublish }

