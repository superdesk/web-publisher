services:
    session.memcached:
        class: "Memcached"
        arguments:
            - "%session_memcached_prefix%"
        calls:
            - [ addServer, [ "%session_memcached_host%", "%session_memcached_port%" ]]

    session.handler.memcached:
        class:     "Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\MemcachedSessionHandler"
        arguments: ["@session.memcached", { prefix: "%session_memcached_prefix%", expiretime: "%session_memcached_expire%" }]

    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }

framework:
    session:
        storage_id: "swp_core.security.session.domain_dynamic_storage"
        handler_id: "session.handler.memcached"

doctrine:
    orm:
        resolve_target_entities:
            SWP\Component\ContentList\Model\ListContentInterface: SWP\Bundle\CoreBundle\Model\Article
        entity_managers:
            default:
                mappings:
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity"
                        is_bundle: false
                filters:
                    tenantable:
                        class: SWP\Bundle\MultiTenancyBundle\Query\Filter\TenantableFilter
                        enabled: true
                    soft-deleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: true

jms_serializer:
    metadata:
        directories:
            SWPCoreBundle:
                namespace_prefix: "SWP\\Bundle\\CoreBundle"
                path: "@SWPCoreBundle/Resources/config/serializer"
            FOSUserBundle:
                namespace_prefix: "FOS\\UserBundle"
                path: "@SWPCoreBundle/Resources/config/serializer/fos-user"
            SyliusThemeBundle:
                namespace_prefix: "Sylius\\Bundle\\ThemeBundle"
                path: "@SWPCoreBundle/Resources/config/serializer/sylius-theme"

swp_templates_system:
    persistence:
        orm:
            enabled: true
            classes:
                container:
                    model: SWP\Bundle\CoreBundle\Model\Container
                    repository: SWP\Bundle\CoreBundle\Repository\RevisionAwareContainerRepository
                widget_model:
                    model: SWP\Bundle\CoreBundle\Model\WidgetModel

swp_rule:
    persistence:
        orm:
            enabled: true
            classes:
                rule:
                    model: SWP\Bundle\CoreBundle\Model\Rule

swp_menu:
    persistence:
        orm:
            enabled: true
            classes:
                menu:
                    model: SWP\Bundle\CoreBundle\Model\MenuItem

swp_content:
    persistence:
        orm:
            enabled: true
            classes:
                article:
                    model: SWP\Bundle\CoreBundle\Model\Article
                    repository: SWP\Bundle\CoreBundle\Repository\ArticleRepository
                media:
                    model: SWP\Bundle\CoreBundle\Model\ArticleMedia
                route:
                    model: SWP\Bundle\CoreBundle\Model\Route
                image:
                    model: SWP\Bundle\CoreBundle\Model\Image
                article_source:
                    model: SWP\Bundle\CoreBundle\Model\ArticleSource

swp_revision:
    persistence:
        orm:
            enabled: true
            classes:
                revision:
                    model: SWP\Bundle\CoreBundle\Model\Revision
                revision_log:
                    model: SWP\Bundle\CoreBundle\Model\RevisionLog

cmf_routing:
    dynamic:
        persistence:
            orm:
                enabled: true
                route_class: SWP\Bundle\CoreBundle\Model\Route

swp_content_list:
    persistence:
        orm:
            enabled: true
            classes:
                content_list:
                    model: SWP\Bundle\CoreBundle\Model\ContentList
                content_list_item:
                    model: SWP\Bundle\CoreBundle\Model\ContentListItem
                    repository: SWP\Bundle\CoreBundle\Repository\ContentListItemRepository
                list_content:
                    model: SWP\Bundle\CoreBundle\Model\Article

swp_facebook_instant_articles:
        persistence:
            orm:
                enabled: true
                classes:
                    facebook_application:
                        model: SWP\Bundle\CoreBundle\Model\FacebookApplication
                    facebook_page:
                        model: SWP\Bundle\CoreBundle\Model\FacebookPage

swp_bridge:
    persistence:
        orm:
            enabled: true
            classes:
                package:
                    model: SWP\Bundle\CoreBundle\Model\Package

sylius_theme:
    context: "swp_core.theme.context.tenant_aware"
    sources:
        tenantable: ~

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: SWP\Bundle\CoreBundle\Model\User
    from_email:
        address: contact@publisher.test
        sender_name: Publisher
    registration:
        confirmation:
            enabled: true

swp_multi_tenancy:
    use_orm_listeners: true
    persistence:
        orm:
            enabled: true
            classes:
                tenant:
                    model: SWP\Bundle\CoreBundle\Model\Tenant
                organization:
                    model: SWP\Bundle\CoreBundle\Model\Organization

knp_paginator:
    page_range: 10
    default_options:
        page_name: page
        sort_field_name: sort
        sort_direction_name: direction
        distinct: true

stof_doctrine_extensions:
    default_locale: "%locale%"
    orm:
        default:
            timestampable: true
            softdeleteable: true
            loggable: true
            sortable: true
            tree: true

takeit_amp_html:
    theme:
        loader: 'swp.loader.amp_theme'
        theme_path: 'amp/amp-theme'
    model: SWP\Bundle\CoreBundle\Model\Article
    checker: 'swp.checker.amp_support'
    routing:
        parameter_strategy:
            enabled: true

swp_user:
    persistence:
        orm:
            enabled: true
            classes:
                user:
                    model: SWP\Bundle\CoreBundle\Model\User
                    interface: SWP\Bundle\CoreBundle\Model\UserInterface

swp_webhook:
    persistence:
        orm:
            enabled: true
            classes:
                webhook:
                    model: SWP\Bundle\CoreBundle\Model\Webhook
                    interface: SWP\Bundle\CoreBundle\Model\WebhookInterface
                    repository: SWP\Bundle\CoreBundle\Repository\WebhookRepository

swp_settings:
    persistence:
        orm:
            enabled: true
            classes:
                settings:
                    model: SWP\Bundle\CoreBundle\Model\Settings
    settings:
        registration_enabled:
            type: boolean
            scope: tenant
            value: true
        registration_confirmation.template:
            value: "%fos_user.registration.confirmation.template%"
            scope: tenant
            type: string
        registration_from_email.confirmation:
            value: "%fos_user.registration.confirmation.from_email%"
            scope: tenant
            type: array
        registration_resetting.template:
            value: "%fos_user.resetting.email.template%"
            scope: tenant
            type: string
        registration_from_email.resetting:
            value: "%fos_user.resetting.email.from_email%"
            scope: tenant
            type: array
        instance_name:
            scope: global
            type: string
            value: "Publisher Master"
        filtering_prefrences:
            scope: user
            type: string
            value: "{}"
        user_private_preferences:
            scope: user
            type: string
            value: "{}"
        user_favourite_articles:
            scope: user
            type: string
            value: "{}"

swp_analytics:
    metrics_listener:
        enabled: false
    persistence:
        orm:
            enabled: true
            classes:
                article_statistics:
                    model: SWP\Bundle\CoreBundle\Model\ArticleStatistics
                article_events:
                    model: SWP\Bundle\CoreBundle\Model\ArticleEvent

old_sound_rabbit_mq:
    connections:
        default:
            host:     '%env(RABBIT_MQ_HOST)%'
            port:     '%env(RABBIT_MQ_PORT)%'
            user:     '%env(RABBIT_MQ_USER)%'
            password: '%env(RABBIT_MQ_PASSWORD)%'
            vhost:    '/'
            lazy:     true
            connection_timeout: 3
            read_write_timeout: 3
            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false
            # requires php-amqplib v2.4.1+
            heartbeat: 0
    producers:
        send_webhook:
            connection:       default
            exchange_options: {name: '%kernel.environment%_send_webhook', type: direct}
    consumers:
        send_webhook:
            connection:       default
            exchange_options: {name: '%kernel.environment%_send_webhook', type: direct}
            queue_options:    {name: '%kernel.environment%_send_webhook'}
            callback:         SWP\Bundle\CoreBundle\Consumer\SendWebhookConsumer
        analytics_event:
            connection:       default
            exchange_options: {name: '%kernel.environment%_analytics_event', type: direct}
            queue_options:    {name: '%kernel.environment%_analytics_event'}
            callback:         SWP\Bundle\CoreBundle\Consumer\AnalyticsEventConsumer

