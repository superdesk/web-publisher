fos_elastica:
    clients:
        default: { host: "%env(ELASTICA_HOST)%", port: "%env(ELASTICA_PORT)%" }
    indexes:
        swp:
            index_name: '%env(ELASTICA_INDEX_NAME)%'
            settings:
                analysis:
                    analyzer:
                        default:
                            type: custom
                            tokenizer: standard
                            filter: [lowercase, swp_ascii_folding]
                        swp_code_analyzer:
                            type: custom
                            tokenizer: whitespace
                            filter: [lowercase]
                        swp_author_name_analyzer:
                            type: custom
                            tokenizer: keyword
                        swp_sources_analyzer:
                            type: custom
                            tokenizer: keyword
                            filter: [standard]
                        swp_folding_analyzer:
                            type: custom
                            tokenizer: standard
                            filter: [lowercase, swp_ascii_folding]
                    filter:
                        swp_ascii_folding:
                            type: "asciifolding"
                            preserve_original: true

            types:
                article:
                    properties:
                        id: { type: integer}
                        code: { type: string, analyzer: swp_code_analyzer }
                        title: { type: string, analyzer: swp_folding_analyzer }
                        body: { type: string, analyzer: swp_folding_analyzer }
                        lead: { type: string, analyzer: swp_folding_analyzer}
                        slug: { type: string }
                        status: { type: string }
                        located:
                            property_path: metadata[located]
                        version:
                            property_path: metadata[version]
                        priority:
                            property_path: metadata[priority]
                        urgency:
                            property_path: metadata[urgency]
                        language:
                            property_path: metadata[language]
                        tenantCode: { type: string }
                        isPublishable: { type: boolean }
                        publishedAt:
                            type: date
                        updatedAt:
                            type: date
                        createdAt:
                            type: date
                        route:
                            type: "object"
                            properties:
                                name: { type: string }
                                id: { type: integer }
                        sources:
                            type: "nested"
                            properties:
                                name: { type: string, analyzer: swp_sources_analyzer }
                        keywords:
                            type: "nested"
                            include_in_root: true
                            properties:
                                name: { type: string, analyzer: swp_folding_analyzer }
                        authors:
                            type: "nested"
                            properties:
                                id: { type: integer }
                                name: { type: string, analyzer: swp_author_name_analyzer }
                        extra:
                            type: object
                        articleStatistics:
                            type: "object"
                            properties:
                                pageViewsNumber: { type: integer }
                    persistence:
                        driver: orm
                        model: "%swp.model.article.class%"
                        provider: ~
                        finder: ~
                        repository: SWP\Bundle\ElasticSearchBundle\Repository\ArticleRepository
                        elastica_to_model_transformer:
                            ignore_missing: true
                package:
                    properties:
                        id: { type: integer}
                        guid: { type: string, analyzer: swp_code_analyzer }
                        headline: { type: string }
                        slugline: { type: string }
                        language: { type: string }
                        description: { type: string }
                        byline: { type: string }
                        status: { type: string }
                        source: { type: string }
                        updatedAt:
                            type: date
                        organization:
                            type: "object"
                            properties:
                                id: { type: integer }
                        articles:
                            type: "nested"
                            properties:
                                id: { type: integer}
                                code: { type: string, analyzer: swp_code_analyzer }
                                title: { type: string }
                                body: { type: string }
                                lead: { type: string }
                                slug: { type: string }
                                status: { type: string }
                                tenantCode: { type: string }
                                publishedAt:
                                    type: date
                                isPublishable: { type: boolean }
                                route:
                                    type: "object"
                                    properties:
                                        name: { type: string }
                                        id: { type: integer }
                        authors:
                            type: "nested"
                            properties:
                                id: { type: integer }
                                name: { type: string, analyzer: swp_author_name_analyzer }
                    persistence:
                        driver: orm
                        model: "%swp.model.package.class%"
                        provider: ~
                        finder: ~
                        repository: SWP\Bundle\ElasticSearchBundle\Repository\PackageRepository
                        elastica_to_model_transformer:
                            ignore_missing: true
