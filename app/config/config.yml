imports:
    - { resource: "@SWPAnalyticsBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPBridgeBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPContentBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPMultiTenancyBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPRuleBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPMenuBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPContentListBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPRevisionBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPOutputChannelBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPCoreBundle/Resources/config/app/config.yml" }
    - { resource: "@SWPElasticSearchBundle/Resources/config/app/config.yml" }
    - { resource: parameters.yml }
    - { resource: security.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    templating.cache_warmer.template_paths.class: "Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplatePathsCacheWarmer"

framework:
    ide: 'phpstorm://open?file=%%f&line=%%l'
    cache:
        default_doctrine_provider: doctrine_cache.providers.main_cache
    esi: { enabled: true }
    translator:
        fallbacks: ["%locale%"]
        logging: false
    secret: "%env(SYMFONY_SECRET)%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: false }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    fragments: { path: /_fragment }
    http_method_override: true

sensio_framework_extra:
    view:    { annotations: false }

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: false

twig_cache:
    service: "doctrine_cache.providers.main_cache"
    key_generator: "swp_core.key_generator.meta_key_generator"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_pgsql
        host:     '%env(DATABASE_HOST)%'
        port:     '%env(DATABASE_PORT)%'
        dbname:   '%env(DATABASE_NAME)%'
        user:     '%env(DATABASE_USER)%'
        password: '%env(DATABASE_PASSWORD)%'
        charset:  UTF8
        server_version: '%env(DATABASE_SERVER_VERSION)%'
        mapping_types:
            json: string

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                naming_strategy: doctrine.orm.naming_strategy.underscore
                auto_mapping: false
                metadata_cache_driver:
                    type: service
                    id: doctrine_cache.providers.main_cache
                query_cache_driver:
                    type: service
                    id: doctrine_cache.providers.main_cache
                result_cache_driver:
                      type: service
                      id: doctrine_cache.providers.main_cache

doctrine_cache:
    providers:
        main_cache:
            type: '%doctrine_cache_driver%'
            namespace: '%env(SYMFONY_SECRET)%'

doctrine_migrations:
    dir_name: "%kernel.root_dir%/migrations"
    namespace: SWP\Migrations
    table_name: swp_migration
    name: Publisher Migrations

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_http_cache:
    user_context:
        enabled: false
    tags:
        enabled: false
    cache_manager:
        enabled: true
        generate_url_type: 0
    proxy_client:
        varnish:
            http:
                servers: "%cache_servers%"
                base_url: "%env(SWP_DOMAIN)%"
    invalidation:
        rules:
            -
                match:
                    attributes:
                        _route: "swp_api_content_update_lists|swp_api_content_delete_lists"
                routes:
                    swp_api_content_list_lists: ~
                    swp_api_content_show_lists: ~
            -
                match:
                    attributes:
                        _route: "swp_api_content_update_routes|swp_api_content_delete_routes"
                routes:
                    swp_api_content_list_routes: ~
                    swp_api_content_show_routes: ~
            -
                match:
                    attributes:
                        _route: "swp_api_content_create_routes"
                routes:
                    swp_api_content_list_routes: ~
            -
                match:
                    attributes:
                        _route: "swp_api_content_update_articles"
                routes:
                    swp_api_content_list_articles: ~
                    swp_api_content_show_articles: ~
                    swp_api_core_list_packages: ~
            -
                match:
                    attributes:
                        _route: "swp_api_templates_update_widget|swp_api_templates_delete_widget"
                routes:
                    swp_api_templates_list_widgets: ~
                    swp_api_templates_get_widget: ~
            -
                match:
                    attributes:
                        _route: "swp_api_templates_update_widget|swp_api_templates_delete_widget"
                routes:
                    swp_api_templates_list_widgets: ~
                    swp_api_templates_get_widget: ~
            -
                match:
                    attributes:
                        _route: "swp_api_templates_update_container|swp_api_templates_delete_container|swp_api_templates_link_container"
                routes:
                    swp_api_templates_list_containers: ~
                    swp_api_templates_get_container: ~
            -
                match:
                    attributes:
                        _route: "swp_api_core_update_tenant|swp_api_core_delete_tenant"
                routes:
                    swp_api_core_list_tenants: ~
                    swp_api_core_get_tenant: ~
            -
                match:
                    attributes:
                        _route: "swp_api_core_update_rule|swp_api_core_delete_rule"
                routes:
                    swp_api_core_list_rule: ~
                    swp_api_core_get_rule: ~
            -
                match:
                    attributes:
                        _route: "swp_api_core_update_organization_rule|swp_api_core_delete_organization_rule"
                routes:
                    swp_api_core_list_organization_rules: ~
                    swp_api_core_show_organization_rule: ~
            -
                match:
                    attributes:
                        _route: "swp_api_core_move_menu|swp_api_core_delete_menu"
                routes:
                    swp_api_core_list_menu: ~
                    swp_api_core_list_children_menu: ~
                    swp_api_core_get_menu: ~
            -
                match:
                    attributes:
                        _route: "swp_api_core_create_menu"
                routes:
                    swp_api_core_list_menu: ~

fos_rest:
    zone:
        - { path: ^/api/* }
    versioning:
        enabled: false
    routing_loader:
        default_format: json
    view:
        formats:
            json: true
        view_response_listener: false
    serializer:
        serialize_null: true
    format_listener:
        rules:
            - { path: "^/api", priorities: ['json'], fallback_format: json, prefer_extension: true }
            - { path: "^/", stop: true }
    body_listener:
        decoders:
            json: fos_rest.decoder.jsontoform
    disable_csrf_role: ROLE_API
    exception:
        codes:
            "Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException": 404
            "SWP\\Component\\Common\\Exception\\NotFoundHttpException": 404
            "SWP\\Bundle\\SettingsBundle\\Exception\\InvalidScopeException": 500
        messages:
            "Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException": true
            "SWP\\Component\\Common\\Exception\\NotFoundHttpException": true
            "SWP\\Bundle\\SettingsBundle\\Exception\\InvalidScopeException": true

swp_core:
    device_listener:
        enabled: true

nelmio_api_doc:
    request_listener: false

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: ["%allow_origin_cors%"]
        allow_methods: ["POST", "LINK", "UNLINK", "GET", "DELETE", "OPTIONS", "PATCH"]
        allow_headers: ["origin", "content-type", "accept", "authorization", "link"]
        expose_headers: ["link"]
        max_age: 3600
    paths:
        '^/api/': ~

sentry:
    dsn: "%sentry.dsn%"
    options:
        environment: "%kernel.environment%"
        release: "dev-master"

monolog:
    handlers:
        swp_rule:
            level:    debug
            type:     rotating_file
            path:     '%kernel.logs_dir%/swp_rule_%kernel.environment%.log'
            max_files: 7
            channels: swp_rule
        swp_validators:
            level:    debug
            type:     rotating_file
            path:     '%kernel.logs_dir%/swp_validators_%kernel.environment%.log'
            max_files: 7
            channels: swp_validators
