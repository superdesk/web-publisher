name: CI

on:
  [push, pull_request]

jobs:

  tests:
    name: Tests (PHP ${{ matrix.php }} on ${{ matrix.os }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        php: ['7.4', '8.0']

    services:
      postgres:
        image: postgres:9.6-alpine
        ports:
          - 5432/tcp
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
      memcached:
        image: memcached:1.6.5
        ports:
          - 11211:11211
      rabbitmq:
        image: rabbitmq:3.8.3
        ports:
          - 5672:5672
      elasticsearch:
        image: elasticsearch:5.4
        ports:
          - 9200:9200

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          extensions: "json,memcached,amqp,pdo_sqlite,pgsql,mbstring,xml,ctype,iconv,intl"
          ini-values: "memory_limit=-1"
          php-version: "${{ matrix.php }}"
          tools: pecl

      - name: Display versions
        run: |
          php -r 'foreach (get_loaded_extensions() as $extension) echo $extension . " " . phpversion($extension) . PHP_EOL;'
          php -i

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=directory::$(composer config cache-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.directory }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --ansi --optimize-autoloader

      - if: matrix.php-version != '8.0'
        run: composer install --prefer-dist --no-progress --ansi --optimize-autoloader

      - if: matrix.php-version == '8.0'
        run: composer install --prefer-dist --no-progress --ansi --optimize-autoloader --ignore-platform-reqs=php

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Cache NPM
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install & run server.js
        run: cd src/SWP/Bundle/CoreBundle/Tests/Functional/Resources/ && npm install json-server && nohup node server.js &

      - name: Test loading fixtures in dev env
        run: php bin/console doctrine:fixtures:load --env=test --no-interaction
        env:
          FIXTURES_TYPE: dev
          WEBP_CONVERSION_ENABLED: false

      - name: Test migrations
        run: php bin/console doctrine:migrations:migrate --env=test --no-debug -vvv
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:${{ job.services.postgres.ports[5432] }}/postgres?charset=UTF-8

      - name: Run Behat tests
        run: ./bin/behat -f progress -vvv
        env:
          MEMCACHED_HOST: localhost
